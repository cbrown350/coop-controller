; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[metadata]
release_version = 0.0.1
product_name = Coop Controller
; At a minimum, for security you should set the following in a .env file in the root of the project:
;       CONTROLLER_AP_PASSWORD
;       DEV_OTA_UPDATE_PASSWORD
;   see others in coop_settings.h

[env]
lib_deps =
    google/googletest ; needed for code completion in IDEs, doesn't recognize with only test_framework = googletest
build_unflags = 
    -std=gnu++11
build_src_flags =

build_flags = 
    -DPRODUCT_NAME="\"${metadata.product_name}\""
    -DFIRMWARE_VERSION="\"${metadata.release_version}\""
    -std=gnu++2a
    -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_ERROR
    -DLOGGER_DISABLE_SD -DLOGGER_DISABLE_SPIFFS ; disable broken Elog file logging
    -Wall ; -Wextra -Wpedantic -Wconversion -Werror

lib_ldf_mode = deep+    ; required to fix WiFiManager update.h missing error

extra_scripts =
; pre:scripts/run_ca_cert_gen.py ; if you want a custom bundle, also uncomment EMBED_*FILES src/CMakeLists.txt and board_build.embed_*files below
    pre:scripts/set_build_num.py
    pre:scripts/set_env_vars.py
    pre:scripts/get_timezone_data.py
    post:scripts/create_json_ota_update_file.py

test_framework = googletest


[embedded]
board = esp32dev
platform = espressif32@^6.4.0
framework = arduino, espidf
lib_deps =
    ${env.lib_deps}
    x385832/Elog@^1.1.4
    arcao/Syslog@^2.0.0
    bblanchon/ArduinoJson@^6.21.3
    https://github.com/tzapu/WiFiManager.git@^2.0.16-rc.2 ;tzapu/WiFiManager@^0.16.0 - latest on pio, outdated
    256dpi/MQTT@^2.5.1
    michalmonday/CSV Parser@^1.2.1

    milesburton/DallasTemperature @ 3.11.0
    paulstoffregen/OneWire @ ^2.3.8

; ropg/ezTime@^0.8.3
; durydevelop/OLED SSD1306 - SH1106@^1.0.7
    adafruit/Adafruit SSD1306@^2.5.7
    adafruit/Adafruit GFX Library@^1.11.9
; arduino-libraries/Arduino_JSON@^0.2.0
    rzeldent/micro-moustache@^1.0.1
; heman/AsyncMqttClient-esphome@^2.0.0
; chrisjoyce911/esp32FOTA @ ^0.2.7

build_flags =
    ${env.build_flags}
    -isystem "${platformio.packages_dir}/framework-arduinoespressif32/libraries"
;    -Wno-missing-field-initializers ; suppress no-missing-field-initializers warnings in framework-arduinoespressif32->../I2S.cpp
    -isystem "${platformio.workspace_dir}/libdeps" ; suppress unused tokens warnings in libdeps->../OneWire.cpp

board_build.partitions = partitions.csv
board_build.embed_txtfiles =
    .pio/build/timezone_data/zones.csv
;     .pio/build/certs/ca_cert.pem ; if you want a cert, also uncomment EMBED_TXTFILES ${project_dir}/certs/ca_cert.pem in src/CMakeLists.txt
; board_build.embed_files =
;     .pio/build/certs/ca_certs.bin ; if you want a custom bundle, also uncomment EMBED_FILES ${project_dir}/certs/ca_certs.bin in src/CMakeLists.txt
board_build.filesystem = spiffs

test_speed = 115200

monitor_speed =  115200 ; 921600 ;
; monitor_port = COM11 ; /dev/ttyUSB0 ;
; monitor_echo = yes
; monitor_eol = LF
monitor_filters =   ; if terminal not working => 2x CTRL+T->CTRL+D
    ; colorize
    ; time
    esp32_exception_decoder ; for backtrace, can't be used with the other filters

debug_tool = esp-prog
; debug_port = COM13 ; for esp-prog, first port is jtag, second one is uart
; debug_svd_path = ${platformio.packages_dir}/framework-arduinoespressif32/tools/ide-debug/svd/esp32.svd
debug_init_break = tbreak app_main

;upload_protocol = esp-prog
upload_speed = 921600
upload_protocol = esptool ; esp-prog txd0 -> esp-01s tx
;upload_port = /dev/ttyUSB2
;upload_protocol = espota
; upload_port = `printenv DEV_OTA_REMOTE_DEVICE_IP` ; IP_ADDRESS_HERE or mDNS_NAME.local
; upload_flags =
; 	--host_port=`printenv DEV_OTA_HOST_PORT` ; Windows must open firewall
;   --spiffs
;   --auth=DEV_OTA_UPDATE_PASSWORD
;   --port=ESP_PORT


[env:esp32-debug]
extends = embedded
build_type = debug
build_flags =
    ${embedded.build_flags}
    -O0 -ggdb3 -g3
    -DIS_DEBUG_BUILD
; used in sdkconfig_local.h to allow higher debug levels to be used if needed
    -DDEBUG_BUILD_MAX_LOG_LEVEL=5
    -DLOG_LEVEL=LOG_LEVEL_VERBOSE
    -DWIFI_SETUP_TIMEOUT_SECS=120
    -DMQTT_PUB_INTERVAL_SECS=1

; https://docs.platformio.org/en/latest/core/userguide/cmd_test.html#usage
; https://docs.platformio.org/en/latest/advanced/unit-testing/frameworks/custom/runner.html
debug_test = embedded/debug/test_all_libs
; pio test -vve esp32-debug -f embedded/debug/* -i --
test_filter =
    embedded/debug/*
test_ignore =
    ; requires server to be set up -> pio test -vve esp32-debug -f embedded/debug/test_ota_update_with_server -i embedded/debug/test_all_libs
    embedded/debug/test_ota_update_with_server 
    ; requires server to be set up -> pio test -vve esp32-debug -f embedded/debug/test_mqtt_with_server -i embedded/debug/test_all_libs
    embedded/debug/test_mqtt_with_server 
    embedded/release/*
    desktop/*   


[env:esp32-release]
extends = embedded
build_type = release
build_flags =
    ${embedded.build_flags}
    -Os
    -DENABLE_LOGGING
    -DLOG_LEVEL=LOG_LEVEL_WARN

test_filter =
    embedded/release/*
test_ignore =
    embedded/debug/*
    desktop/*   


[env:desktop]
platform = native
build_type = debug
build_flags =
    ${env.build_flags}
;    -O0 -ggdb3 -g3
    -I test/desktop
    -DIS_DEBUG_BUILD
    -DLOG_LEVEL=LOG_LEVEL_VERBOSE
; lib_compat_mode = off
; lib_ignore = hal
; upload_protocol = native

debug_test = desktop/test_all_libs
; pio test -vve desktop -f desktop/*
test_filter =
    desktop/*   
test_ignore =
    embedded/*


